What happens when you initialize a repository? Why do you need to do it?
Running 'git init' creates a .git folder in your directory that contains all the metadata in order to keep track of your repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is where files are held before being committed as changes. This is different from the working directory and repository because in the staging area you can pick and choose what files need to belong. The working directory contains all the files in the directory you are currently in and the repository contains all the files in the entire project.

How can you use the staging area to make sure you have one commit per logical change?
Because the staging area is the temporary holding place for files that have changed since the previous commit, you can use commands like git status and git diff to make sure your the files you add to your next commit are part of one logical change. If not, you can split up the files into separate commits.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches would seem to be the most helpful when your code base is might be undergoing a serious change. For example, an experimental feature or a complete refactor of a main component.

